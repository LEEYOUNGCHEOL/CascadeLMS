<p class="blockintro">Create a new rubric, where the primary trait is the goal displayed to the student.</p>
<div class="block">
<p><label for="rubric_primary_trait" class="required">Rubric primary trait:</label>
   <%= text_area 'rubric', 'primary_trait', "cols" => 80, "rows" => 5  %></p>
</div>

<p class="blockintro">Rubric scoring: Rubrics are scored on a 4 tiered basis, <b>excellent</b>, <b>proficient</b>, <b>apprentice</b> and <b>novice</b>.  You should define the criteria that lead to each category being selected and assign a point value to each.   The point values are not absolute, for instance if you assign apprentice as being 3 points, you can award an individual student 4 points if they exceed the partial credit requirement but don't achieve the proficient requirement.</p>
<div class="block">
<p><label for="rubric_above_credit_criteria" class="required">Excellent: (optional)</label>
   <%= text_area 'rubric', 'above_credit_criteria', "cols" => 80, "rows" => 5  %></p>
<p><label for="rubric_above_credit_points" class="required">Excellent:</label>
   <%= text_field 'rubric', 'above_credit_points'  %></p>	
	
<p><label for="rubric_full_credit_criteria" class="required">Proficient:</label>
   <%= text_area 'rubric', 'full_credit_criteria', "cols" => 80, "rows" => 5  %></p>
<p><label for="rubric_full_credit_points" class="required">Proficient:</label>
   <%= text_field 'rubric', 'full_credit_points'  %></p>

<p><label for="rubric_part_credit_criteria" class="required">Apprentice:</label>
   <%= text_area 'rubric', 'part_credit_criteria', "cols" => 80, "rows" => 5  %></p>
<p><label for="rubric_part_credit_points" class="required">Apprentice:</label>
   <%= text_field 'rubric', 'part_credit_points'  %></p>

<p><label for="rubric_no_credit_criteria" class="required">Novice:</label>
   <%= text_area 'rubric', 'no_credit_criteria', "cols" => 80, "rows" => 5  %></p>
<p><label for="rubric_no_credit_points" class="required">Novice:</label>
   <%= text_field 'rubric', 'no_credit_points'  %></p>
</div>

<p class="blockintro">You can define visibility of rubrics.  A rubric can be visible to student from the moment the assignment is visible, after the assignment is graded, or not at all.</p>
<div class="block">
<p><label for="rubric_visible_before_grade_release" class="required">Show rubric before grading complete:</label>
	 <%= radio_button 'rubric', 'visible_before_grade_release', true %> Yes
	 <%= radio_button 'rubric', 'visible_before_grade_release', false %> No</p>
	
<p><label for="rubric_visible_after_grade_release" class="required">Show rubric after grading complete:</label>
	 <%= radio_button 'rubric', 'visible_after_grade_release', true %> Yes
	 <%= radio_button 'rubric', 'visible_after_grade_release', false %> No</p>
</div>

<p class="blockintro">Map this rubric to one or more course outcomes.</p>
<div class="block">
<ul>

<%
  parent_stack = [-1]
  count_stack = [0]
  last_stack_size = 1
  @course.ordered_outcomes.each do |outcome|
    if outcome.parent == parent_stack[-1] ## Same level 
      count_stack.push( count_stack.pop + 1 ) 
    elsif parent_stack.index( outcome.parent ).nil?  ## New level 
      parent_stack.push outcome.parent 
      count_stack.push 1 
    else ## need to pop back to correct level 
      while (parent_stack[-1] != outcome.parent) 
        parent_stack.pop
        count_stack.pop
      end 
      count_stack.push( count_stack.pop + 1 )
    end 

    number = count_stack.join('.')
%>	

<%  if parent_stack.length > last_stack_size %>
    <ul>
<% end %>
<%  if parent_stack.length < last_stack_size %>
    </ul>
<% end %>

    <li>
     <%= check_box_tag "course_outcome_#{outcome.id}", outcome.id, @rubric.mapped_to_course_outcome?(outcome.id) %>
     <%= number %>) <%=h outcome.outcome %>
    </li>

<%
    last_stack_size = parent_stack.length
  end
%>

	
</ul>
</div>
