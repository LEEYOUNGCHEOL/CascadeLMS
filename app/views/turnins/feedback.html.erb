
<% if @grade_item %>
 <%= render :partial => 'grade_entry' %>

<% elsif !@assignment.released%>
  <div "alert alert-error">Grades and instructor feedback are not yet available.
    <% if @assignment.auto_grade && !@assignment.auto_grade_setting.nil? && @assignment.auto_grade_setting.any_student_grade? %>	
      <br/>Scroll down for results from the AutoGrader.
    <% end%>
  </div>
<% end %>

<% if @current_turnin %>
<!--  -->
 <% anyVisibleAutoGradeResults = false 
    @assignment.io_checks.each do |check|      
       anyVisibleAutoGradeResults = anyVisibleAutoGradeResults || check.student_level || @assignment.released
    end
  %>

 <% if anyVisibleAutoGradeResults && @assignment.auto_grade && !@assignment.auto_grade_setting.nil? && @assignment.auto_grade_setting.io_check? %>
   <h2>AutoGrade Results</h2>
	
   <% if ! @current_turnin.safe_for_autograde? %>
   <div class="standout"><i class="icon-exclamation-sign"></i> This turn-in set is not considered safe for automatic execution, an instructor needs to review the files first.</div>
   <% end %>
	
	<ul><strong>Output diff key:</strong>
	 <li><span class="diffAdd">This is extra text you have in your output that should not be there.</span></li>
	 <li><span class="diffSub">Your output does not actually contain this text, but it should.</span></li>
	 <li><span class="diffChange">Your output has this text, rather than the expected text.</span></li>
   </ul>

  <ul id="tabs" class="nav nav-tabs">
    <li class="active"><a href="#sideBySide" data-toggle="tab">Side-by-side Diff View</a></li>
	<li><a href="#lineByLine" data-toggle="tab">Line by line view</a></li>
  </ul>

<div class="tab-content">
  <div class="tab-pane fade in active" id="sideBySide">	
    <%= render :partial => 'side_by_side' %>
  </div>
  <div class="tab-pane fade" id="lineByLine">
    <%= render :partial => 'line_by_line' %>
  </div>
</div>

<% else %>
 <span class="alert alert-info">Automatic grading by way of output verification is enabled for this assignment, but the results are hidden until the grades and instructor comments are released.</span>
<% end %>

<!-- FILES -->
 <h2>Turned in files</h2>
 <a name="contents">Jump to file</a>
 <ul>
 <% for utf in @current_turnin.user_turnin_files %>
  <% unless utf.directory_entry? || utf.auto_added? %>
    <% if FileManager.is_text_file( utf.extension ) %>
      <li><a href="#file_<%=utf.id%>"> <i class="<%= utf.icon %>"></i> <%= utf.full_filename( @directories ) %></a>
	  <% comment_hash = Hash.new
	     comment_hash = utf.file_comments_hash if @assignment.released %>
	  <% if comment_hash.size > 0 %>
	   <ul>
		<li><em>Instructor comments:</em></li>
		<% keys = comment_hash.keys.sort %>
		<% for key in keys %>
		  <li><a href="#<%= utf.id %>_<%= key %>">Line #<%= key %></a>: <%=h comment_hash[key].comments[0..50] %><% if comment_hash[key].comments.size >= 50 %>...<% end %></li>
		<% end %>
	   </ul>
	  <% end %>
	  </li>
    <% else %>
      <li><i class="<%= utf.icon %>"></i> <%= utf.full_filename( @directories ) %> (<%= link_to "download", :action => 'download_file', :id => utf.id %>)</li>
    <% end %>
  <% end %>
 <% end %>
 </ul>

  <% for utf in @current_turnin.user_turnin_files %>
   <% if !utf.auto_added? %> 
   <% if FileManager.is_text_file( utf.extension ) %>
    <div class="SectionHeader"><div class="Full">
    <i class="<%= utf.icon %>"></i>
    <% if utf.directory_entry? %>Directory:
    <% else %>File:
    <% end %><a name="file_<%=utf.id%>"><b><%= utf.full_filename( @directories ) %></b></a>
        <a href="#contents"><%= image_tag 'arrow_up.png' %></a>
    </div></div>

	<% if utf.directory_entry? %>
	  <p><i>Directory entry</i></p>
	<% else %>
	  <% directory = @current_turnin.get_dir( @app['external_dir'] )
	     directory = @current_turnin.get_team_dir( @app['external_dir'], @team ) unless @team.nil?
	     lines = FileManager.format_file( @app['enscript_command'], "#{directory}#{utf.full_filename( @directories )}", utf.extension )
	     comment_hash = Hash.new
	     comment_hash = utf.file_comments_hash if @assignment.released
	     style_hash = Hash.new
	     style_hash = utf.file_style_hash if @assignment.auto_grade && !@assignment.auto_grade_setting.nil? && ( @assignment.auto_grade_setting.student_style || @assignment.released)
	   %>
	 
	   <% line_num = 0 %>
	   <div class="codeout">
	     <% for line in lines %>
	       <% line_num = line_num.next %>
	       <% numbers = line_num.to_s 
	          numbers.size.upto(8) { |x| numbers = "&nbsp;#{numbers}" } %>
	       <%= numbers %> <a name="<%= utf.id %>_<%= line_num %>">:</a> <%= line %><br/>
	
	       <% if comment_hash[line_num] %>
	          <div class="codecomment">
	<i>Instructor comment on line <%=line_num%></i><br/>
	<b><%= comment_hash[line_num].comments.to_html %></b>
	          </div>
	       <% end %>
	       <% if style_hash[line_num] %>
	          <% for fs in style_hash[line_num] %>
	            <div class="codestyle">
		           <i>PMD Code Style:</i> From line <%= fs.begin_line %>:<%= fs.begin_column %> to line <%= fs.end_line %>:<%= fs.end_column %><br/>
		           <ul>
			         <li><b><%= fs.message %></b></li>
			         <li><b>Explanation:</b> <%= fs.style_check.description rescue "unknown" %> </li>
			         <li><b><%= link_to_function "View Example: #{image_tag 'folder_bug.png'}", visual_effect(:toggle_appear, "example_#{fs.id}" )  %></b></li>
			       <ul>
				   
				       <div class="code_example" id="example_<%=fs.id%>" style="display: none;">
					     <%= fs.style_check.example rescue "no example available" %>
					   </div>
		        </div>
	          <% end %>
	       <% end %>
	
	     <% end %>
	   </div>
	<% end %>
   <% end ## if text file %>
   <% end ## if not auto added %>
  <% end ## for loop %>

<% else %>
 <p><i>No turn-in found</i></p>
<% end %>
